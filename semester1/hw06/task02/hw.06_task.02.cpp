// author: Roman Tereshin
// email:  roman.tereshin@student.spbu.ru

// hw 06, task 02

// По дереву разбора арифметического выражения вычислить его значение. Дерево разбора хранится в файле в виде
// (<операция> <операнд1> <операнд2>), где <операнд1> и <операнд2> сами могут быть деревьями, либо числами.
// Например, выражение (1 + 1) * 2 представляется в виде (* (+ 1 1) 2). Должны поддерживаться операции +, -, *, /
// и целые числа в качестве аргументов. Требуется построить дерево в явном виде, распечатать его (не обязательно так
// же, как в файле), и посчитать значение выражения обходом дерева. Может быть полезна функция ungetc (если не '(',
// возвращаем символ в поток и читаем число fscanf-ом). Можно считать, что входной файл корректен. Пример - по
// входному файлу (* (+ 1 1) 2) может печататься ( * ( + 1 1 ) 2 ) и выводиться 4


#include <iostream>
#include <fstream>
#include <string>
#include <stdexcept>
#include "polish_tree.h"

using namespace std;

int main(void) try
{
    clog << "Enter a file name with integral syntax tree: ";
    string fname;
    cin >> fname;
    ifstream in(fname.c_str());
    if (!in)
    {
        cerr << "File " << fname << " not found" << endl;
        return 1;  // 1 - это код ошибки. Куда он идет? После завершения программы наберите в консоли
                   // ... echo %ERRORLEVEL% в windows или echo $? в *nix - и все поймете.
    }

    OperationNode polishTree(in);      // Заменой in на cin мы тут же переведем нашу программу на работу с консолью.
    cout << "(=" << polishTree << ' ' << polishTree.calculate() << ')' << endl;      // Неплохо бы в качестве ответа
                                                                                     // ... выдавать строку, верную
    return 0;      // 0 - это все в полном порядке                                   // ... с позиций нашего же кода
}
catch (std::invalid_argument e)
{
    cerr << e.what() << endl;      // Исключения из стандартной библиотеки имеют замечательный метод what,
                                   // ... который позволяет вытащить строку, ранее переданную конструктору
    return 2;                      // ... этого исключения.
}
